services:

  nginx:
    image: nginx:1.19.2
    # Mounting Nginx configs whthin a container.
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/confd:/etc/nginx/conf.d:ro
    depends_on:
      - auth_api
    ports:
      - "80:80"

  auth_postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGPORT: ${PG_PORT}
    expose:
      - ${PG_PORT}
    volumes:
      - pg_prod_auth_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB} -p ${PG_PORT}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  auth_redis:
    image: redis:7.2.4
    volumes:
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf:ro
    expose:
      - ${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  auth_api:
    build:
      context: ./auth-service
      target: prod
    volumes:
      - .env:/.env:ro
    expose:
      - ${API_PORT}
    environment:
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      PROJECT_NAME: ${PROJECT_NAME}
      API_PORT: ${API_PORT}
    depends_on:
      auth_postgres:
        condition: service_healthy
      auth_redis:
        condition: service_healthy

volumes:
  pg_prod_auth_data:
